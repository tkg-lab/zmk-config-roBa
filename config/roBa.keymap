#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    // automouse-layer = <4>;

    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        mb1 {
            bindings = <&mkp MB1>;
            key-positions = <18 19>;
        };

        mb2 {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>; // CW=下, CCW=上
            tap-ms = <20>;                               // チャタ抑制
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E       &kp R                        &kp T                                                                      &kp Y            &kp U               &lt 5 I    &kp O    &kp P
&lt 5 A         &kp S         &kp D       &kp F                        &kp G        &kp LS(LG(S))                    &kp MINUS                    &kp H            &lt_to_layer_0 5 J  &kp K      &kp L    &kp BACKSPACE
&kp Z           &kp X         &kp C       &kp V                        &kp B        &kp LEFT_CONTROL                 &kp SLASH                    &kp N            &kp M               &kp COMMA  &kp DOT  &kp UNDER
&kp LEFT_SHIFT  &kp LEFT_WIN  &kp ESCAPE  &lt_to_layer_0 2 LEFT_SHIFT  &lt 1 SPACE  &lt_to_layer_0 3 LANGUAGE_2      &lt_to_layer_0 6 LANGUAGE_1  &lt 2 LS(ENTER)                                          &kp DEL
            >;

            // sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
            sensor-bindings = <&encoder_msc_down_up>;   // ← 追加

        };

        FUNCTION {
            bindings = <
&kp LG(T)      &msc SCRL_LEFT  &kp UP             &msc SCRL_LEFT  &kp LS(LC(NUMBER_3))                                        &kp LS(LC(LG(NUMBER_4)))  &kp LS(LC(TAB))  &kp LC(UP)    &kp LC(TAB)    &kp LG(X)
&kp LC(LG(F))  &kp LEFT        &kp DOWN           &kp RIGHT       &kp PAGE_UP           &kp C_MUTE            &kp HOME        &kp LG(A)                 &kp LC(LEFT)     &kp LC(DOWN)  &kp LC(RIGHT)  &kp LG(C)
&kp LS(LG(N))  &kp LS(UP)      &kp LG(BACKSPACE)  &kp LS(DOWN)    &kp PAGE_DOWN         &kp C_PLAY_PAUSE      &kp END         &kp LG(Z)                 &kp LG(LEFT)     &kp LG(F)     &kp LG(RIGHT)  &kp LG(V)
&trans         &kp LG(MINUS)   &kp LG(PLUS)       &trans          &trans                &trans                &msc SCRL_DOWN  &msc SCRL_UP                                                            &kp LC(C)
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        NUM {
            bindings = <
&kp PIPE             &kp LEFT_BRACE  &kp RBRC  &kp LPAR     &kp RPAR                                                         &kp PERIOD         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&mt LEFT_SHIFT AMPS  &kp DOLLAR      &kp HASH  &kp AT_SIGN  &kp EXCLAMATION   &kp LC(LA(KP_NUMBER_0))      &kp PLUS          &kp NUMBER_0       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp BACKSLASH
&kp CARET            &kp TILDE       &kp SEMI  &kp COLON    &kp LEFT_BRACKET  &kp RIGHT_BRACKET            &kp ASTRK         &kp EQUAL          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSPACE
&trans               &trans          &trans    &trans       &trans            &trans                       &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans            &trans      &trans          &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_PREVIOUS  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans            &trans      &trans          &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
